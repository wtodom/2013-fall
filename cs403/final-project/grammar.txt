program: functionDef optStatements

functionDef: TO VARIABLE optSequence COLON block

optSequence: sequence
		   | *empty*

sequence: expr
		| expr AND expr
		| expr commaChain COMMA AND expr

commaChain: COMMA expr optCommaChain

optCommaChain: COMMA expr optCommaChain
			 | *empty*

block: optStatements optReturn HASH

optStatements: statements
			 | *empty*

statements: statement optStatements

statement: expr PERIOD
		 | ifStatement
		 | whileStatement
		 | assignment PERIOD
		 | TODO

ifStatement: IF booleanExpr COMMA block optOtherwise

whileStatement: WHILE booleanExpr COMMA block

booleanExpr: expr IS boolOp expr

optOtherwise: OTHERWISE COMMA block
			| OTHERWISE COMMA ifStatement
			| *empty*

assignment: SET variable TO expr

expr: OPEN_PARENTHESIS expr operator expr CLOSE_PARENTHESIS
	| primary
	| functionCall
	| SHOW expr
	| arrayGet

primary: VARIABLE
	   | NUMBER
	   | STRING
	   | BOOLEAN
	   | NOTHING (NULL)

boolean: TRUE
	   | FALSE

functionCall: CARROT VARIABLE OPEN_PARENTHESIS optSequence CLOSE_PARENTHESIS

operator: PLUS
		| MINUS
		| DIVIDE
		| MULTIPLY

boolOp: DOUBLE_EQUALS
	  | NOT_EQUAL
	  | LESS_THAN
	  | GREATER_THAN
	  | LESS_THAN_EQUAL
	  | GREATER_THAN_EQUAL

==========================

optReturn: RETURN expr PERIOD
		 | *empty*

