program: functionDef optStatements

functionDef: TO VARIABLE optSequence COLON block

optSequence: sequence
	   | *empty*

sequence: expr
	| expr AND expr
	| expr commaChain COMMA AND expr

commaChain: COMMA expr optCommaChain

optCommaChain: COMMA expr commaChain
			 | *empty*

block: optStatements PERIOD

optStatements: statements
			 | *empty*

statements: statement optStatements

statement: expr SEMICOLON
		 | ifStatement
		 | whileStatement
		 | assignment
		 | TODO

ifStatement: IF expr IS expr COMMA block optOtherwise

whileStatement: WHILE expr IS expr COMMA block

optOtherwise: OTHERWISE block
			| OTHERWISE ifStatement
			| *empty*

assignment: SET variable TO expr

expr: primary
	| functionCall
	| OPEN_PARENTHESIS primary operator primary CLOSE_PARENTHESIS

primary: VARIABLE
	   | INTEGER
	   | STRING
	   | TRUE
	   | FLASE
	   | NOTHING (NULL)

functionCall: IDENTIFIER OPEN_PARENTHESIS optSequence CLOSE_PARENTHESIS

operator: PLUS
		| MINUS
		| DIVIDE
		| MULTIPLY
		| DOUBLE_EQUALS
		| NOT_EQUAL
		| LESS_THAN
		| GREATER_THAN
		| LESS_THAN_EQUAL
		| GREATER_THAN_EQUAL